<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

    <flow name="wb02-poller-trigger-flow">
        <poll doc:name="Poll">
            <schedulers:cron-scheduler expression="${poll.schedule.wb02}"/>
            <logger message="Interface Start" level="INFO"  doc:name="Poller Start"/>
        </poll>
        <set-variable variableName="companyCode" value="${company.code.wb02}" doc:name="Set Company Code as Variable"/>

        <flow-ref name="inbound-common-handler-flow" doc:name="inbound-common-handler-flow"/>
    </flow>
    <flow name="wq02-poller-trigger-flow">
        <poll doc:name="Poll">
            <schedulers:cron-scheduler expression="${poll.schedule.wq02}"/>
            <logger message="Interface Start" level="INFO"  doc:name="Poller Start"/>
        </poll>
        <set-variable variableName="companyCode" value="${company.code.wq02}" doc:name="Set Company Code as Variable"/>

        <flow-ref name="inbound-common-handler-flow" doc:name="inbound-common-handler-flow"/>
    </flow>
    <flow name="http-adhoc-trigger-flow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="${http.interface.adhoc.path}" doc:name="HTTP" allowedMethods="${http.interface.adhoc.method}"/>
        <flow-ref name="initial-http-adhoc-variable-sub-flow" doc:name="initial-http-adhoc-variable-sub-flow"/>
        <flow-ref name="inbound-common-handler-flow" doc:name="inbound-common-handler-flow"/>

        <set-payload value="#['Done!']" doc:name="Set Payload"/>
    </flow>
    
<flow name="inbound-common-handler-flow">
        <logger message="#[flow.name] - Start of inbound flow" level="INFO" doc:name="START"/>
        <flow-ref name="call-sql-api-sub-flow" doc:name="call-sql-api-sub-flow"/>
        <set-variable variableName="sqlCount" value="#[payload == &quot;0&quot; ? &quot;0&quot; : payload.size()]" doc:name="Get SQL Data Count"/>
        <logger message="#[flow.name] - SQL Data Count : #[flowVars.sqlCount]" level="INFO" doc:name="Log SQL Data Count"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Prepare Inbound Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	interfaceId: p('eusqlsap003.interfaceid'),
    businessEvent: p('eusqlsap003.businessevent'),
	instanceId: 'plannedtime_' ++ flowVars.companyCode ++ '_' ++ now as :string {format: "yyyyMMdd_HHmmss"},
	sourceSystem: p('eusqlsap003.sourcesystem'),
	messageContent: write(payload, "application/json")
}]]></dw:set-payload>
        </dw:transform-message>
        <vm:outbound-endpoint exchange-pattern="request-response" path="${wmf.common.router.vm}" connector-ref="VM" doc:name="Send to Router VM"/>


            <logger level="INFO" doc:name="END" message="#[flow.name] - End of inbound flow"/>
    </flow>
</mule>
