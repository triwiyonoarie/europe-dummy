<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">
    <validation:config name="Validation_Configuration" doc:name="Validation Configuration"/>
    <flow name="interface-flow">
        <jms:inbound-endpoint queue="${jms.interface.eusqlsap003}" connector-ref="Active_MQ" doc:name="JMS"/>
        <flow-ref name="initial-batch-variable-sub-flow" doc:name="initial-batch-variable-sub-flow"/>
        <logger message="#[&quot;Message ID : &quot; + message.rootId + &quot; &quot;] SQL Data Count : #[payload == &quot;0&quot; ? &quot;0&quot; : payload.size()]" level="INFO" doc:name="Log SQL Data count"/>
        <choice doc:name="Choice">
            <when expression="#[payload != '0']">
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <flow-ref name="get-dataweave-sub-flow" doc:name="get-dataweave-sub-flow"/>
                <flow-ref name="call-sap-api-sub-flow" doc:name="call-sap-api-sub-flow"/>
                <dw:transform-message doc:name="Map SAP Return">
                    <dw:set-payload resource="file:D:/Mule/Config/application/dataweave/eu-sqlsap-plannedtime-return-mapping.dwl"/>
                    <dw:set-variable variableName="failedRecords"><![CDATA[%dw 1.0
%output application/java
---
payload.ZRFC_SQL_TO_SAP_PLANNED_TIME.tables.RESULT.*row.ZCONR
when ((sizeOf payload.ZRFC_SQL_TO_SAP_PLANNED_TIME.tables.RESULT) > 0)
otherwise []]]></dw:set-variable>
                    <dw:set-variable variableName="loadedRecords"><![CDATA[%dw 1.0
%output application/java
---
payload.ZRFC_SQL_TO_SAP_PLANNED_TIME.tables.ARRIVAL.*row.ZCONR
when ((sizeOf payload.ZRFC_SQL_TO_SAP_PLANNED_TIME.tables.ARRIVAL) > 0)
otherwise []]]></dw:set-variable>
                    <dw:set-variable variableName="successfulRecords"><![CDATA[%dw 1.0
%output application/java
---
(payload.ZRFC_SQL_TO_SAP_PLANNED_TIME.tables.ARRIVAL.*row.ZCONR
when ((sizeOf payload.ZRFC_SQL_TO_SAP_PLANNED_TIME.tables.ARRIVAL) > 0)
otherwise []) --
(payload.ZRFC_SQL_TO_SAP_PLANNED_TIME.tables.RESULT.*row.ZCONR
when ((sizeOf payload.ZRFC_SQL_TO_SAP_PLANNED_TIME.tables.RESULT) > 0)
otherwise [])]]></dw:set-variable>
                </dw:transform-message>
                <dw:transform-message doc:name="Set the error message">
                    <dw:set-variable variableName="errorMessage"><![CDATA[%dw 1.0
%output application/java
---
"" when (payload.errorMessage == "") otherwise (payload.errorMessage.record joinBy "\n")]]></dw:set-variable>
                </dw:transform-message>
                <batch:execute name="updateSAPFLAGBatch" doc:name="Batch Execute"/>
                <flow-ref name="wmf-logging-flow" doc:name="Flow Reference"/>
            </when>
            <when expression="#[payload == '0']">
                <logger message="#[&quot;Message ID : &quot; + message.rootId + &quot; &quot;] #[flow.name] No data from SQL" level="INFO" doc:name="No Data Log"/>
                <set-payload value="#[flowVars.inboundMessage]" doc:name="Set inboundMessage as Payload "/>
                <vm:outbound-endpoint exchange-pattern="one-way" path="${wmf.inboundmessage.completed.status.vm}" connector-ref="VM" doc:name="Update Inbound Event Status to Completed"/>
            </when>
            <otherwise>
                <logger message="#[&quot;Message ID : &quot; + message.rootId + &quot; &quot;] Choice failed. Default log" level="INFO" doc:name="Default Log"/>
            </otherwise>
        </choice>

        <exception-strategy ref="global-exception-strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <batch:job name="updateSAPFLAGBatch">
        <batch:input>
	        <dw:transform-message doc:name="Transform Message">
	            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.successfulRecords map {
	ZCONR : $
}
]]></dw:set-payload>
	        </dw:transform-message>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step">
                <logger message="#[&quot;Message ID : &quot; + message.rootId + &quot; &quot;] UPDATE SAP FLAG #[payload.ZCONR]" level="INFO" doc:name="Log Update SAPFLAG"/>
                <flow-ref name="update-sapflag-flow" doc:name="update-sapflag-flow"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <logger message="#[&quot;Message ID : &quot; + message.rootId + &quot; &quot;] Batch Processing :  #[payload.loadedRecords] Loaded Records; #[payload.successfulRecords] Success Records; #[payload.failedRecords] Failed Records" level="INFO" doc:name="Log Record Stat"/>
            <logger message="#[&quot;Message ID : &quot; + message.rootId + &quot; &quot;] End of the Batch" level="INFO" doc:name="END"/>
        </batch:on-complete>
    </batch:job>
    
</mule>
